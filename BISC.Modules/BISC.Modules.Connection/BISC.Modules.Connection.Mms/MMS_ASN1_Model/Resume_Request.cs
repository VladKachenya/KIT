
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using BISC.Modules.Connection.MMS.org.bn;
using BISC.Modules.Connection.MMS.org.bn.attributes;
using BISC.Modules.Connection.MMS.org.bn.coders;

namespace BISC.Modules.Connection.MMS.MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "Resume_Request", IsSet = false  )]
    public class Resume_Request : IASN1PreparedElement {
                    
	private Identifier programInvocationName_ ;
	
        [ASN1Element ( Name = "programInvocationName", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public Identifier ProgramInvocationName
        {
            get { return programInvocationName_; }
            set { programInvocationName_ = value;  }
        }
        
                
          
	private ExecutionArgumentChoiceType executionArgument_ ;
	

    [ASN1PreparedElement]    
    [ASN1Choice ( Name = "executionArgument" )]
    public class ExecutionArgumentChoiceType : IASN1PreparedElement  {
	            
        
	private MMSString simpleString_ ;
        private bool  simpleString_selected = false ;
        
                
        
        [ASN1Element ( Name = "simpleString", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public MMSString SimpleString
        {
            get { return simpleString_; }
            set { selectSimpleString(value); }
        }
        
                
          
        public bool isSimpleStringSelected () {
            return this.simpleString_selected ;
        }

        


        public void selectSimpleString (MMSString val) {
            this.simpleString_ = val;
            this.simpleString_selected = true;
            
                        
        }
        
  

            public void initWithDefaults()
	    {
	    }

            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ExecutionArgumentChoiceType));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

    }
                
        [ASN1Element ( Name = "executionArgument", IsOptional =  false , HasTag =  false  , HasDefaultValue =  false )  ]
    
        public ExecutionArgumentChoiceType ExecutionArgument
        {
            get { return executionArgument_; }
            set { executionArgument_ = value;  }
        }
        
                
  

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Resume_Request));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
