
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using BISC.Modules.Connection.MMS.org.bn;
using BISC.Modules.Connection.MMS.org.bn.attributes;
using BISC.Modules.Connection.MMS.org.bn.coders;

namespace BISC.Modules.Connection.MMS.MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "VariableAccessParameters", IsSet = false  )]
    public class VariableAccessParameters : IASN1PreparedElement {
                    
	private MMSString uninterruptibleAccess_ ;
	
        [ASN1Element ( Name = "uninterruptibleAccess", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public MMSString UninterruptibleAccess
        {
            get { return uninterruptibleAccess_; }
            set { uninterruptibleAccess_ = value;  }
        }
        
                
          
	private bool singleMode_ ;
	[ASN1Boolean( Name = "" )]
    
        [ASN1Element ( Name = "singleMode", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public bool SingleMode
        {
            get { return singleMode_; }
            set { singleMode_ = value;  }
        }
        
                
          
	private bool unnamedMode_ ;
	[ASN1Boolean( Name = "" )]
    
        [ASN1Element ( Name = "unnamedMode", IsOptional =  false , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public bool UnnamedMode
        {
            get { return unnamedMode_; }
            set { unnamedMode_ = value;  }
        }
        
                
  

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(VariableAccessParameters));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
