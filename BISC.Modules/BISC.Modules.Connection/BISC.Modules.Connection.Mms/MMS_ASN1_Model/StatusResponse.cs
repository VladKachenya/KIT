
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using BISC.Modules.Connection.MMS.org.bn;
using BISC.Modules.Connection.MMS.org.bn.attributes;
using BISC.Modules.Connection.MMS.org.bn.attributes.constraints;
using BISC.Modules.Connection.MMS.org.bn.coders;
using BISC.Modules.Connection.MMS.org.bn.types;

namespace BISC.Modules.Connection.MMS.MMS_ASN1_Model {


    [ASN1PreparedElement]
    [ASN1Sequence ( Name = "StatusResponse", IsSet = false  )]
    public class StatusResponse : IASN1PreparedElement {
                    
	private long vmdLogicalStatus_ ;
	[ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "vmdLogicalStatus", IsOptional =  false , HasTag =  true, Tag = 0 , HasDefaultValue =  false )  ]
    
        public long VmdLogicalStatus
        {
            get { return vmdLogicalStatus_; }
            set { vmdLogicalStatus_ = value;  }
        }
        
                
          
	private long vmdPhysicalStatus_ ;
	[ASN1Integer( Name = "" )]
    
        [ASN1Element ( Name = "vmdPhysicalStatus", IsOptional =  false , HasTag =  true, Tag = 1 , HasDefaultValue =  false )  ]
    
        public long VmdPhysicalStatus
        {
            get { return vmdPhysicalStatus_; }
            set { vmdPhysicalStatus_ = value;  }
        }
        
                
          
	private BitString localDetail_ ;
	
        private bool  localDetail_present = false ;
	[ASN1BitString( Name = "" )]
    [ASN1ValueRangeConstraint ( 
		
		Min = 0L, 
		
		Max = 128L 
		
		) ]
	    
        [ASN1Element ( Name = "localDetail", IsOptional =  true , HasTag =  true, Tag = 2 , HasDefaultValue =  false )  ]
    
        public BitString LocalDetail
        {
            get { return localDetail_; }
            set { localDetail_ = value; localDetail_present = true;  }
        }
        
                
  
        public bool isLocalDetailPresent () {
            return this.localDetail_present == true;
        }
        

            public void initWithDefaults() {
            	
            }


            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(StatusResponse));
            public IASN1PreparedElementData PreparedData {
            	get { return preparedData; }
            }

            
    }
            
}
