<UserControl x:Class="BISC.Modules.InformationModel.Presentation.Views.InformationModelDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:baseConverters="clr-namespace:BISC.Presentation.BaseItems.Converters;assembly=BISC.Presentation.BaseItems"
             xmlns:local="clr-namespace:BISC.Modules.InformationModel.Presentation.Views"
             xmlns:behaviors="clr-namespace:BISC.Modules.InformationModel.Presentation.Behaviors"
             xmlns:converters="clr-namespace:BISC.Modules.InformationModel.Presentation.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:infoModelDetails="clr-namespace:BISC.Modules.InformationModel.Presentation.ViewModels.InfoModelDetails"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:interfaces="clr-namespace:BISC.Modules.InformationModel.Presentation.Interfaces"
             xmlns:templateSelectors="clr-namespace:BISC.Modules.InformationModel.Presentation.TemplateSelectors"
             xmlns:infoModelTree="clr-namespace:BISC.Modules.InformationModel.Presentation.ViewModels.InfoModelTree"
             mc:Ignorable="d">

    <UserControl.Resources>
        <converters:LevelToMarginConverter x:Key="LevelToMarginConverter" />
        <converters:TypeNameToIsDragSourceConverter x:Key="TypeToIsDragSourceConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:DataAttributeHeaderToToggleButtonVisibilityConverter x:Key="ToggleButtonVisibilityConverter"/>
        <converters:IsGroupedToMarginConverter x:Key="GroupedToMarginConverter"/>
        <baseConverters:TriggerConverter x:Key="TriggerConverter"/>

    </UserControl.Resources>
    <Grid HorizontalAlignment="Stretch" Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="2*"></RowDefinition>
            <RowDefinition>
                <RowDefinition.Style>
                    <Style TargetType="RowDefinition">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=expanderBottom,Path=IsExpanded}" Value="True">
                                <Setter Property="Height" Value="*"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=expanderBottom,Path=IsExpanded}" Value="False">
                                <Setter Property="Height" Value="Auto"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
        </Grid.RowDefinitions>
        <CheckBox HorizontalAlignment="Left" Content="Группировать по FC" IsChecked="{Binding IsFcSortChecked}"></CheckBox>
        <Grid Grid.Row="1">
            <Grid
            Name="dummygrid"
            Width="{Binding ElementName=MainGrid, Path=ActualWidth}"
            Visibility="Hidden">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.8*" />
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.2*" />

                </Grid.ColumnDefinitions>
                <Border Name="dummywidth1" Grid.Column="0" />
                <Border Name="dummywidth2" Grid.Column="1" />
                <Border Name="dummywidth3" Grid.Column="2" />

            </Grid>
            <TreeView
                Name="SclTreeView"
                Width="auto"
                HorizontalAlignment="Stretch"
                ItemsSource="{Binding Path=AllIecTreeItems}"
                dd:DragDrop.IsDragSource="True" 
                dd:DragDrop.IsDropTarget="False">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <Setter Property="IsExpanded" Value="False"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplateSelector>
                    <templateSelectors:ModelItemTemplateSelector>
                        <templateSelectors:ModelItemTemplateSelector.ValueDataTemplate>
                            <HierarchicalDataTemplate DataType="infoModelTree:DaiInfoModelItemViewModel" ItemsSource="{Binding ChildInfoModelItemViewModels}">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Grid.Column="0" Margin="2"  Background="{Binding TypeColorBrush}" >
                                        <TextBlock Margin="2"  Text="{Binding TypeName}"></TextBlock>
                                    </Border>
                                    <TextBlock Grid.Column="1" Margin="4" Text="{Binding Header}"/>

                                    <StackPanel Grid.Column="3" Orientation="Horizontal" Visibility="{Binding Header, Converter={StaticResource ToggleButtonVisibilityConverter}}">
                                        <Button IsEnabled="{Binding IsValueChanged}"  
                                                Height="25" Width="25" Padding="3" 
                                                CommandParameter="{Binding}"
                                                Command="{Binding DataContext.WriteDbValueOfDaiCommand,ElementName=SclTreeView}"
                                                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}">
                                            <Button.Content>
                                                <ContentControl ContentTemplate="{DynamicResource UploadNetworkIcon}"/>
                                            </Button.Content>
                                        </Button>
                                        <ToggleButton 
                                            CommandParameter="{Binding}"
                                            Command="{Binding DataContext.AddItemToSaveCommand,ElementName=SclTreeView}"
                                            IsChecked="{Binding CanEditingValue}" 
                                                      Margin="10, 0"/>
                                    </StackPanel>

                                    <ContentControl Content="{Binding .}"  Grid.Column="4" >
                                        <ContentControl.Style>
                                            <Style TargetType="ContentControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CanEditingValue}" Value="False" >
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Value}" TextAlignment="Right" Height="Auto" Padding="0, 4" MinWidth="150"/>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding CanEditingValue}" Value="True">
                                                        <Setter Property="ContentTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" Margin="0" Padding="0" TextAlignment="Right" VerticalAlignment="Center" MinWidth="150"
                                                                             ToolTip="{Binding ValueToolTip}">
                                                                    </TextBox>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </Grid>
                            </HierarchicalDataTemplate>
                        </templateSelectors:ModelItemTemplateSelector.ValueDataTemplate>
                        <templateSelectors:ModelItemTemplateSelector.DoiDataTemplate>
                            <HierarchicalDataTemplate DataType="infoModelTree:DoiInfoModelItemViewModel" ItemsSource="{Binding ChildInfoModelItemViewModels}">
                                <ContentControl Style="{DynamicResource BlockedContentStyle}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal">
                                            <Border Margin="2"  Background="{Binding TypeColorBrush}" >
                                                <TextBlock Margin="2"  Text="{Binding TypeName}"/>
                                            </Border>
                                            <TextBlock Margin="4" Text="{Binding Header}"/>
                                        </StackPanel>

                                        <Button Margin="0" Padding="0" Grid.Column="1"
                                                Height="25" Width="25"
                                                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                                CommandParameter="{Binding .}" >
                                            <Button.Command>
                                                <MultiBinding Converter="{StaticResource TriggerConverter}">
                                                    <Binding Path="DataContext.LoadDoiValuesCommand"
                                                             ElementName="SclTreeView"/>
                                                </MultiBinding>
                                            </Button.Command>
                                            <Button.Content>
                                                <ContentControl ContentTemplate="{DynamicResource ArrowDownBoldCircleOutlineIcon}"/>
                                            </Button.Content>
                                            <Button.ToolTip>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="Прочитать значения "/>
                                                    <TextBlock Text="{Binding TypeName}"/>
                                                    <TextBlock Text="/"/>
                                                    <TextBlock Text="{Binding Header}"/>
                                                </StackPanel>
                                            </Button.ToolTip>
                                        </Button>
                                    </Grid>
                                </ContentControl>
                            </HierarchicalDataTemplate>
                        </templateSelectors:ModelItemTemplateSelector.DoiDataTemplate>
                        <templateSelectors:ModelItemTemplateSelector.NoValueDataTemplate>
                            <HierarchicalDataTemplate DataType="interfaces:IInfoModelItemViewModel" ItemsSource="{Binding ChildInfoModelItemViewModels}">
                                <ContentControl Style="{DynamicResource BlockedContentStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Border Margin="2"  Background="{Binding TypeColorBrush}" >
                                            <TextBlock Margin="2"  Text="{Binding TypeName}"></TextBlock>
                                        </Border>
                                        <TextBlock Margin="4" Text="{Binding Header}"></TextBlock>
                                    </StackPanel>
                                </ContentControl>
                            </HierarchicalDataTemplate>
                        </templateSelectors:ModelItemTemplateSelector.NoValueDataTemplate>
                    </templateSelectors:ModelItemTemplateSelector>
                </TreeView.ItemTemplateSelector>
            </TreeView>
        </Grid>
        <Grid HorizontalAlignment="Stretch" Grid.Row="2" DataContext="{Binding Source={x:Reference Name=SclTreeView},Path=SelectedItem}">
            <Expander Name="expanderBottom" IsExpanded="True" Header="Выбранный элемент">
                <ListView  HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" AlternationCount="2"  Margin="0" ItemsSource="{Binding TreeItemDetails}">
                    <ItemsControl.Resources>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                            <Style.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                    <Setter Property="Background" Value="{DynamicResource Primary500}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <DataTemplate DataType="{x:Type infoModelDetails:BoolInfoModelDetail}">
                            <Grid Margin="{Binding IsGrouped,Converter={StaticResource GroupedToMarginConverter}}" ToolTip="{Binding ToolTip}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock  Grid.Column="0" Text="{Binding DetailDescription}"></TextBlock>
                                <CheckBox Grid.Column="1"  IsEnabled="False" IsChecked="{Binding BoolValue,Mode=OneWay}"></CheckBox>
                            </Grid>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type infoModelDetails:DefaultInfoModelDetail}">
                            <Grid Margin="{Binding IsGrouped,Converter={StaticResource GroupedToMarginConverter}}" ToolTip="{Binding ToolTip}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding DetailDescription}"></TextBlock>
                                <TextBlock Grid.Column="1"  IsEnabled="False" Text="{Binding DetailValue}"></TextBlock>
                            </Grid>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type infoModelDetails:GroupInfoModelDetail}">
                            <Grid Margin="{Binding IsGrouped,Converter={StaticResource GroupedToMarginConverter}}" ToolTip="{Binding ToolTip}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding DetailDescription}"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"></StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ListView>
            </Expander>
        </Grid>
    </Grid>
</UserControl>



