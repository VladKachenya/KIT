<Window x:Class="BISC.Shell"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BISC"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:constants="clr-namespace:BISC.Infrastructure.Global.Constants;assembly=BISC.Infrastructure.Global"
        xmlns:viewModel="clr-namespace:BISC.ViewModel"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:interactivity="http://prismlibrary.com/"
        xmlns:attachedCommandBehavior="clr-namespace:AttachedCommandBehavior;assembly=AttachedCommandBehavior"
        xmlns:keys="clr-namespace:BISC.Presentation.Infrastructure.Keys;assembly=BISC.Presentation.Infrastructure"
        xmlns:behaviors="clr-namespace:BISC.Presentation.BaseItems.Behaviors;assembly=BISC.Presentation.BaseItems"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        Title="{Binding ApplicationTitle}" Height="500" Width="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing" >
            <command:EventToCommand  PassEventArgsToCommand="True"   Command="{Binding ShellClosingCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <materialDesign:DialogHost     attachedCommandBehavior:CommandBehavior.Command="{Binding ShellLoadedCommand}"
                                   attachedCommandBehavior:CommandBehavior.Event="Loaded"  Identifier="{x:Static constants:Constants.RootDialogKey}" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="212">
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                  DockPanel.Dock="Top"
                                  HorizontalAlignment="Right" Margin="16"
                                  IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                    <Grid>
                        <ContentControl HorizontalAlignment="Stretch" behaviors:DynamicRegionBehavior.RegionKey="{x:Static keys:KeysForNavigation+RegionNames.HamburgerMenuKey}" />
                    </Grid>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                          Mode="PrimaryMid" DockPanel.Dock="Top">
                    <DockPanel>
                        <ToggleButton DockPanel.Dock="Left" Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="{Binding IsLeftMenuEnabled}"
                                      x:Name="MenuToggleButton"/>
                        <Grid DockPanel.Dock="Right" HorizontalAlignment="Stretch">
                            <ContentControl HorizontalAlignment="Stretch"  interactivity:RegionManager.RegionName="{x:Static keys:KeysForNavigation+RegionNames.ToolBarMenuKey}" />

                        </Grid>
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="3*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ContentControl HorizontalAlignment="Stretch" Margin ="2" interactivity:RegionManager.RegionName="{x:Static keys:KeysForNavigation+RegionNames.MainTreeRegionKey}" />
                    <ContentControl Grid.Column="2" Grid.Row="0" Margin ="2" HorizontalAlignment="Stretch" interactivity:RegionManager.RegionName="{x:Static keys:KeysForNavigation+RegionNames.MainTabHostRegionKey}" />

                    <GridSplitter Grid.Column="1" ShowsPreview="True" Width="3"
                                  HorizontalAlignment="Center" VerticalAlignment="Stretch" />

                    <materialDesign:Snackbar Grid.ColumnSpan="3" MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar"
                                             Grid.Row="1" />
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>

    </materialDesign:DialogHost>
</Window>

